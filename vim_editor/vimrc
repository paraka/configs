syntax on
colorscheme elflord
set smartindent
set tabstop=4
set shiftwidth=4
set expandtab
set number
set showmatch
set relativenumber
set noswapfile
set nobackup
set laststatus=2
set wildmenu
set nowrap

" set UTF-8 encoding
set enc=utf-8
set fenc=utf-8
set termencoding=utf-8

" recreate tags file with F5
map <F3> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
" switch between header/source with F4
map <F4> :e %:p:s,.h$,.X123X,:s,.cpp$,.h,:s,.X123X$,.cpp,<CR>
" build using makeprg with <F7>
map <F7> :make -C build<CR>
" build using makeprg with <S-F7>
map <S-F7> :make -C build clean all<CR>
" goto definition with F12
map <F12> <C-]>

" Now, in order to easily swap between relative numbers and non-relative        
" numbers, let's declare a function that does the job for us: it sets           
" relativenumbers if it's OFF, it unsets it if it's ON.                         
function! ToggleRelativeNumber()                                                
    if &relativenumber == 1                                                     
        set norelativenumber                                                    
        set number                                                              
    else                                                                        
        set relativenumber                                                      
    endif                                                                       
endfunction                                                                     

" Finally, to make toggling easier, I just have to map an unused key, such      
" as F5. This mapping will work both in Normal and in Insert mode. By           
" pressing this key, relative numbers are automatically toggled.                
nmap <F5> :call ToggleRelativeNumber()<CR>                                      
imap <F5> <Esc>:call ToggleRelativeNumber()<CR>

" Toggle Vexplore with Ctrl-E
function! ToggleVExplorer()
  if exists("t:expl_buf_num")
      let expl_win_num = bufwinnr(t:expl_buf_num)
      if expl_win_num != -1
          let cur_win_nr = winnr()
          exec expl_win_num . 'wincmd w'
          close
          exec cur_win_nr . 'wincmd w'
          unlet t:expl_buf_num
      else
          unlet t:expl_buf_num
      endif
  else
      exec '1wincmd w'
      Vexplore
      let t:expl_buf_num = bufnr("%")
  endif
endfunction
map <silent> <C-E> :call ToggleVExplorer()<CR>

" Hit enter in the file browser to open the selected
" file with :vsplit to the right of the browser.
" absolute width of netrw window
let g:netrw_winsize = -28
" do not display info on the top of window
let g:netrw_banner = 0
" tree-view
let g:netrw_liststyle = 3
" sort is affecting only: directories on the top, files below
let g:netrw_sort_sequence = '[\/]$,*'
" hide vim swap files
let g:netrw_list_hide='.*\.swp$'
" open files in a new vertical split
let g:netrw_browse_split = 2
" Change directory to the current buffer when opening files.
set autochdir

" load settings for linux kernel style when match the following prefixes
let g:linuxsty_patterns = [ "/usr/src/", "/linux", "task" ]

" Python configuration
au FileType python setl tabstop=4 softtabstop=4 shiftwidth=4 textwidth=79 expandtab autoindent

" Makefiles
autocmd FileType make set noexpandtab shiftwidth=8 softtabstop=0

" Doxygen configuration
let g:DoxygenToolkit_dateTag = "@date "
let g:DoxygenToolkit_briefTag_funcName = "yes"
let g:DoxygenToolkit_briefTag_pre = "@brief "
let g:DoxygenToolkit_paramTag_pre = "@param "
let g:DoxygenToolkit_returnTag = "@returns "
let g:DoxygenToolkit_blockHeader = ""
let g:DoxygenToolkit_blockFooter = ""
let g:DoxygenToolkit_authorName = "Sergio Paracuellos"
let g:DoxygenToolkit_licenseTag = "(c) <sergio.paracuellos@gmail.com>"
"let g:DoxygenToolkit_compactDoc = "yes" "insert white line
" set cindent
" set cinoptions=c0,C1,(0
" set comments=s0:/*,mb:**,ex:*/,://   " Comments
" let g:DoxygenToolkit_cinoptions = "c0,C1"
